/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import biblioteca.Emprestimo;
import biblioteca.Livro;
import biblioteca.Usuario;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ggois
 */
public class PainelDashboard extends javax.swing.JPanel {
    
    private TelaPrincipal telaPrincipal;
    /**
     * Creates new form PainelLogin
     */
    public PainelDashboard(TelaPrincipal telaPrincipal) {
        initComponents();
        this.telaPrincipal = telaPrincipal;
    }
    
    public void configurarParaUsuario(String tipoUsuario) {
        if (tipoUsuario.equals("USUARIO_COMUM")) {
            btnUser.setEnabled(false);
            btnDev.setEnabled(false);
            btnLivro.setEnabled(false);
            jLabel1.setText("Dashboard");
        } else if (tipoUsuario.equals("ADMINISTRADOR")) {
            btnUser.setEnabled(true);
            btnDev.setEnabled(true);
            btnLivro.setEnabled(true);
            jLabel1.setText("Dashboard (admin)");
        }
    }
    
    public void atualizarTabelaDeLivros() {

        DefaultTableModel model = (DefaultTableModel) jTableLivros.getModel();

        model.setRowCount(0);

        List<Livro> livros = telaPrincipal.getSistema().getLivros();

        for (Livro livro : livros) {
            Object[] rowData = {
                livro.getTitulo(),
                livro.getAutor(),
                livro.getGenero(),
                livro.getIsbn(),
                livro.isDisponivel()
            };
        
            model.addRow(rowData);
        }
    }
    
    private void filtrarTabelaLivros() {
        DefaultTableModel model = (DefaultTableModel) jTableLivros.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        jTableLivros.setRowSorter(sorter);

        String textoFiltro = filtroLivro.getText().trim();

        if (textoFiltro.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + textoFiltro, 0, 1, 3));
        }
    }
    
    private void filtrarTabelaEmprestimos() {
        DefaultTableModel model = (DefaultTableModel) jTableEmprestimos.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        jTableEmprestimos.setRowSorter(sorter);

        String textoFiltro = filtroEmpr.getText().trim();

        if (textoFiltro.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + textoFiltro, 0, 1));
        }
        }
    
        public void atualizarTabelaEmprestimos() {
            DefaultTableModel model = (DefaultTableModel) jTableEmprestimos.getModel();
            model.setRowCount(0);

            List<Emprestimo> emprestimos = telaPrincipal.getSistema().getEmprestimos();

            for (Emprestimo emprestimo : emprestimos) {
                Object[] rowData = {
                    emprestimo.getLivro().getTitulo(),
                    emprestimo.getUsuario().getNome(),
                    emprestimo.getDataEmprestimo(),
                    emprestimo.getDataDevolucao(),
                    emprestimo.isDevolvido()
                };
                model.addRow(rowData);
            }
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLivros = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableEmprestimos = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        filtroLivro = new javax.swing.JTextField();
        filtroEmpr = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnLivro = new javax.swing.JButton();
        btnEmpr = new javax.swing.JButton();
        btnUser = new javax.swing.JButton();
        btnDev = new javax.swing.JButton();
        btnQuit = new javax.swing.JButton();
        acao = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(720, 720));
        setMinimumSize(new java.awt.Dimension(720, 720));
        setPreferredSize(new java.awt.Dimension(720, 720));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Dashboard (admin)");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTableLivros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Título", "Autor", "Gênero", "ISBN", "Disponível"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableLivros.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTableLivros);

        jTableEmprestimos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Livro", "Usuário", "Data", "Data de devolução", "Devolvido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableEmprestimos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(jTableEmprestimos);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Filtro (título, autor ou ISBN):");

        filtroLivro.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        filtroLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtroLivroActionPerformed(evt);
            }
        });
        filtroLivro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filtroLivroKeyReleased(evt);
            }
        });

        filtroEmpr.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        filtroEmpr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtroEmprActionPerformed(evt);
            }
        });
        filtroEmpr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filtroEmprKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Filtro (título ou usuário):");

        btnLivro.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnLivro.setText("+ Novo livro");
        btnLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLivroActionPerformed(evt);
            }
        });

        btnEmpr.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnEmpr.setText("+ Novo empréstimo");
        btnEmpr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmprActionPerformed(evt);
            }
        });

        btnUser.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnUser.setText("Gerenciar usuários");
        btnUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserActionPerformed(evt);
            }
        });

        btnDev.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnDev.setText("Registrar devolução");
        btnDev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevActionPerformed(evt);
            }
        });

        btnQuit.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        btnQuit.setText("Sair");
        btnQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitActionPerformed(evt);
            }
        });

        acao.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filtroLivro))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filtroEmpr))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(btnLivro)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnEmpr))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(83, 83, 83)
                                        .addComponent(btnDev)
                                        .addGap(33, 33, 33)
                                        .addComponent(btnUser)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnQuit))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(acao, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(filtroLivro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(acao, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(filtroEmpr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLivro)
                            .addComponent(btnEmpr))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDev)
                            .addComponent(btnUser)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnQuit)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void filtroLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtroLivroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filtroLivroActionPerformed

    private void filtroEmprActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtroEmprActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filtroEmprActionPerformed

    private void btnLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLivroActionPerformed
        telaPrincipal.trocarPainel(telaPrincipal.getPainelCadastroLivro());
    }//GEN-LAST:event_btnLivroActionPerformed

    private void btnEmprActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmprActionPerformed
        int selectedRow = jTableLivros.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, selecione um livro para emprestar.", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int modelRow = jTableLivros.convertRowIndexToModel(selectedRow);
        String isbnSelecionado = (String) jTableLivros.getModel().getValueAt(modelRow, 3);
    
        Livro livroParaEmprestar = telaPrincipal.getSistema().buscarLivro(isbnSelecionado);

        if (livroParaEmprestar == null || !livroParaEmprestar.isDisponivel()) {
            JOptionPane.showMessageDialog(this, "Este livro não está disponível para empréstimo.", "Operação Inválida", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Usuario usuarioLogado = telaPrincipal.getUsuarioLogado();
    
        Emprestimo novoEmprestimo = new Emprestimo(0, livroParaEmprestar, usuarioLogado, new Date());

        telaPrincipal.getSistema().registrarEmprestimo(novoEmprestimo);

        JOptionPane.showMessageDialog(this, "Livro emprestado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        jTableLivros.clearSelection();

        atualizarTabelaDeLivros();
        atualizarTabelaEmprestimos();
    }//GEN-LAST:event_btnEmprActionPerformed

    private void btnUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserActionPerformed
        telaPrincipal.trocarPainel(telaPrincipal.getPainelGestaoUsuario());
    }//GEN-LAST:event_btnUserActionPerformed

    private void btnDevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevActionPerformed
        int selectedRow = jTableEmprestimos.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um empréstimo para registrar a devolução.", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Emprestimo emprestimoParaDevolver = telaPrincipal.getSistema().getEmprestimos().get(selectedRow);

        if (emprestimoParaDevolver.isDevolvido()) {
            JOptionPane.showMessageDialog(this, "Este livro já foi devolvido.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        telaPrincipal.getSistema().registrarDevolucao(emprestimoParaDevolver);

        JOptionPane.showMessageDialog(this, "Devolução registrada com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        jTableEmprestimos.clearSelection();
        
        atualizarTabelaDeLivros();
        atualizarTabelaEmprestimos();
    }//GEN-LAST:event_btnDevActionPerformed

    private void btnQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitActionPerformed
        telaPrincipal.trocarPainel(telaPrincipal.getPainelLogin());
    }//GEN-LAST:event_btnQuitActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

    }//GEN-LAST:event_formComponentShown

    private void filtroLivroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filtroLivroKeyReleased
        filtrarTabelaLivros();
    }//GEN-LAST:event_filtroLivroKeyReleased

    private void filtroEmprKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filtroEmprKeyReleased
        filtrarTabelaEmprestimos();
    }//GEN-LAST:event_filtroEmprKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel acao;
    private javax.swing.JButton btnDev;
    private javax.swing.JButton btnEmpr;
    private javax.swing.JButton btnLivro;
    private javax.swing.JButton btnQuit;
    private javax.swing.JButton btnUser;
    private javax.swing.JTextField filtroEmpr;
    private javax.swing.JTextField filtroLivro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableEmprestimos;
    private javax.swing.JTable jTableLivros;
    // End of variables declaration//GEN-END:variables

}
